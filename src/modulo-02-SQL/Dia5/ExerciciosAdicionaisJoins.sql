--1
SELECT COUNT(DISTINCT SITUACAO)
FROM PRODUTO;
---------------------------------------------------------------
--2
SELECT NOME
FROM CLIENTE
WHERE NOME LIKE '%LTDA%' OR RAZAOSOCIAL LIKE '%LTDA%';
---------------------------------------------------------------
--3
INSERT INTO PRODUTO 
	(NOME, DATACADASTRO, PRECOCUSTO,PRECOVENDA, SITUACAO) 
	VALUES
	('Galocha Maragato', GETDATE(), 35.67, 77.95, 'A');
---------------------------------------------------------------
--4
SELECT *
FROM PRODUTO
WHERE NOT EXISTS (
				SELECT 1
				FROM PEDIDOITEM
				where PEDIDOITEM.IDPRODUTO = PRODUTO.IDPRODUTO)

CREATE INDEX IX_PEDIDOITEM_PRODUTO ON PEDIDOITEM (IDPRODUTO)
---------------------------------------------------------------
--5
SELECT TOP 1 C.UF, COUNT(1) AS TOTAL_CLIENTES
FROM CIDADE C
	LEFT JOIN CLIENTE CL ON CL.IDCIDADE = C.IDCIDADE
GROUP BY C.UF
HAVING COUNT(1) = ( SELECT TOP 1 COUNT(1) AS TOTAL_CLIENTES
					FROM CIDADE C
					LEFT JOIN CLIENTE CL ON CL.IDCIDADE = C.IDCIDADE
					GROUP BY C.UF
					ORDER BY COUNT(1) DESC)

UNION ALL

SELECT TOP 1 C.UF, COUNT(1) AS TOTAL_CLIENTES
FROM CIDADE C
	LEFT JOIN CLIENTE CL ON CL.IDCIDADE = C.IDCIDADE
GROUP BY C.UF
HAVING COUNT(1) = ( SELECT TOP 1 COUNT(1) AS TOTAL_CLIENTES
					FROM CIDADE C
					LEFT JOIN CLIENTE CL ON CL.IDCIDADE = C.IDCIDADE
					GROUP BY C.UF
					ORDER BY COUNT(1))

--OUTRA FORMA DE FAZER MELHOR
CREATE VIEW vweESTADOS 
	SELECT TOP 1 C.UF, COUNT(1) AS TOTAL_CLIENTES
	FROM CIDADE C
		LEFT JOIN CLIENTE CL ON CL.IDCIDADE = C.IDCIDADE
	GROUP BY C.UF
---------------------------------------------------------------
--6
SELECT COUNT(DISTINCT C.NOME)
FROM PEDIDO P
	LEFT JOIN CLIENTE CL ON P.IDCLIENTE = CL.IDCLIENTE
	LEFT JOIN CIDADE C ON CL.IDCIDADE = C.IDCIDADE
---------------------------------------------------------------
--7
SELECT *
FROM PRODUTO
WHERE IDPRODUTO NOT IN(SELECT IDPRODUTO
					   FROM PRODUTOMATERIAL)
---------------------------------------------------------------
--8
SELECT P.IDPRODUTO, P.NOME, P.PRECOCUSTO, SUM(M.PRECOCUSTO) AS PRECO_CUSTO_MATERIAL_R$
FROM PRODUTO P
	LEFT JOIN PRODUTOMATERIAL PM ON P.IDPRODUTO = PM.IDPRODUTO
	LEFT JOIN MATERIAL M ON PM.IDMATERIAL = M.IDMATERIAL
GROUP BY P.IDPRODUTO, P.NOME, P.PRECOCUSTO
---------------------------------------------------------------
--9
--NAO CONSEGUI FAZER AINDA
BEGIN TRANSACTION
GO

UPDATE PRODUTO 
SET PRECOCUSTO = (SELECT SUM(M.PRECOCUSTO) AS PRECO_CUSTO_MATERIAL_R$
				 FROM PRODUTO P
					LEFT JOIN PRODUTOMATERIAL PM ON P.IDPRODUTO = PM.IDPRODUTO
					LEFT JOIN MATERIAL M ON PM.IDMATERIAL = M.IDMATERIAL
				 GROUP BY P.IDPRODUTO, P.NOME, P.PRECOCUSTO
				 )


ROLLBACK
---------------------------------------------------------------
--10
SELECT NOME, COUNT(1)
FROM CLIENTE
GROUP BY NOME
HAVING COUNT(1) > 1
---------------------------------------------------------------
--11
SELECT TOP 1 SUBSTRING(NOME, 0, CHARINDEX(' ', NOME)) AS NOME, COUNT(1)
FROM CLIENTE
GROUP BY SUBSTRING(NOME, 0, CHARINDEX(' ', NOME))
ORDER BY COUNT(1) DESC
---------------------------------------------------------------
--12
SELECT TOP 1 P.IDPRODUTO, P.NOME, P.DATACADASTRO, P.PRECOCUSTO, P.PRECOVENDA, P.SITUACAO, 
			 COUNT(1) AS QUANTIDADE_VENDIDA
FROM PEDIDOITEM PI
	LEFT JOIN PRODUTO P ON PI.IDPRODUTO = P.IDPRODUTO
GROUP BY P.IDPRODUTO, P.NOME, P.DATACADASTRO, P.PRECOCUSTO, P.PRECOVENDA, P.SITUACAO
ORDER BY COUNT(1) DESC